{"version":3,"sources":["Components/AddCategory.js","Helpers/GetGifs.js","Components/GiftGridItem.js","Components/GifGrid.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputVal","setinputVal","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAcA,OAEI,sBAAMC,SAVS,SAACC,GAChBA,EAAEC,iBACEJ,EAASK,OAAOC,OAAO,IACvBR,GAAc,SAAAS,GAAU,OAAGP,GAAH,mBAAeO,OACvCN,EAAY,MAMhB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAlBgB,SAACP,GACrBF,EAAYE,EAAEQ,OAAOF,a,+BCRhBG,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DACZC,EADY,iDACoCC,UAAWH,GAD/C,+DAECI,MAAMF,GAFP,cAEZG,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATxB,kBAcVM,GAdU,4CAAF,sDCEPO,EAAe,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAEnC,OACI,sBAAKc,UAAU,0CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAIA,QCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGtB,ECJsB,SAAEA,GACxB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACGf,KAAKkB,EACLL,SAAQ,SAK9B,CAACpB,IAEIqB,EDdyBK,CAAa1B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACA,qCACI,oBAAIJ,UAAU,qCAAd,SAAqDhB,IAEpDoB,GAAW,mBAAGJ,UAAU,mCAAb,8CAEZ,qBAAKA,UAAU,YAAf,SAESH,EAAOJ,KAAI,SAAAC,GACR,OACI,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEhBpBgB,EAAe,WAGxB,MAAoCzC,mBAAS,CAAC,iBAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAUA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQS,EAAWe,KAAI,SAAAT,GACX,OACI,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCvBrC4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.6da24716.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputVal, setinputVal] = useState('') //String vacio\n\n    const handleInputChange=(e)=>{\n        setinputVal(e.target.value);\n    }\n\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        if (inputVal.trim().length>2) {\n            setCategories(categories=>[inputVal,...categories]);\n            setinputVal('');\n        }\n    }\n\n    return (\n        \n        <form onSubmit={handleSubmit}>\n            <input\n            type=\"text\"\n            value={inputVal}\n            onChange={handleInputChange}\n            />\n        </form> \n    )\n}\n\nAddCategory.propTypes={\n    setCategories:PropTypes.func.isRequired\n}","export const getGifs= async( category)=>{\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=CMJn1EnL3DgjrNSE67aZBv04DC21PAl5`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map(img=>{\n        return {\n            id:img.id,\n            title:img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    //console.log(gifs)\n    return  gifs ;\n}","import React from 'react'\n\nexport const GiftGridItem = ({id,title,url}) => {\n    //console.log(id,title,url)\n    return (\n        <div className=\"card animate__animated animate__fadeIn \">\n            <img src={ url } alt ={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../Hooks/useFetchGifs';\nimport { GiftGridItem } from './GiftGridItem';\n\nexport const GifGrid = ({ category }) => {\n    \n    //este hook hace que cuando se lanza por primera vez se ejecute el helper getGifts \n    const {data:images, loading } = useFetchGifs(category);\n    \n    return (\n    <>\n        <h3 className=\"animate__animated animate__fadeIn \">{ category }</h3>\n\n        {loading && <p className=\"animate__animated animate__flash\"> Loading la concha de tu hermana</p> }        \n        \n        <div className=\"card-grid\">\n             {\n                 images.map(img => {\n                    return(\n                        <GiftGridItem\n                        key={img.id}\n                        {...img}\n                        />\n                        )\n                     })\n             } \n             \n        </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../Helpers/GetGifs\"\n\nexport const useFetchGifs=( category )=>{\n    const [state, setstate] = useState({\n        data:[],\n        loading:true\n    })\n    \n    useEffect( ()=>{\n        getGifs(category)\n            .then(imgs=>{\n                setstate({\n                            data:imgs,\n                            loading:false\n                        })\n                        \n                }\n            )\n    },[category])\n\n    return state;\n}","import React,{useState} from 'react'\nimport { AddCategory } from './Components/AddCategory' \nimport { GifGrid } from './Components/GifGrid' \n\nexport const GifExpertApp = () => {\n    //const categories =['One Punch','Samurai x','My hero Academia','Hunter x Hunter','Dragon Ball']\n    //hook  use state\n    const [categories, setCategories] = useState(['Demon Slayer']);//['One Punch','Samurai x','My hero Academia','Hunter x Hunter','Dragon Ball']\n\n    // const handleAddCategoria=()=>{\n    //     //agregando usando el operador spread ...\n    //     //setCategories([...categories,'NuevaCategoria']);\n        \n    //     //Agregando una nueva categoria mediante un callback\n    //     setCategories(categories=>[...categories,'NuevaCategoriaCalllback']);\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr/> \n\n            <ol>\n                {\n                    categories.map(category=>{\n                        return(\n                            <GifGrid \n                                key={category} \n                                category={category}\n                            />)\n                    })\n                }\n            </ol>\n        </>\n        \n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';  \n\nReactDOM.render( \n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n "],"sourceRoot":""}